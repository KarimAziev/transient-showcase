#+TITLE Package
#+AUTHOR: Psionik K
#+PROPERTY: header-args :results silent :comments link :file transient-showcase.el

The headers and footers for the tangled module.

* Package Header

#+name: license-header
#+begin_src elisp tangle: yes hidden
  ;;; transient-showcase.el --- transient features & behavior showcase -*-
  ;;; lexical-binding: t; -*-

  ;; Copyright (C) 2022 Positron Solutions


  ;; Author: Psionik K <73710933+psionic-k@users.noreply.github.com> Keywords:
  ;; convenience Version: 0.1.0 Package-Requires: ((emacs "25.1") (project
  ;; "0.7.1") (auto-compile "1.2.0")) Homepage:
  ;; http://github.com/positron-solutions/elisp-repo-kit

  ;; Permission is hereby granted, free of charge, to any person obtaining a copy
  ;; of this software and associated documentation files (the "Software"), to deal
  ;; in the Software without restriction, including without limitation the rights
  ;; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  ;; copies of the Software, and to permit persons to whom the Software is
  ;; furnished to do so, subject to the following conditions:

  ;; The above copyright notice and this permission notice shall be included in
  ;; all copies or substantial portions of the Software.

  ;; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  ;; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  ;; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  ;; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  ;; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ;; OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  ;; SOFTWARE.

  ;;; Commentary:

  ;; This package is created from the README and serves as a fast way to load all
  ;; of the examples without tangling the org document.  This is appropriate if you
  ;; just want to quickly browse through the examples and see their source code.
  ;;
  ;; M-x transient-showcase contains most of the prefixes and can be bound for
  ;; use as a quick reference.  Just use transient's help for each command to
  ;; see the source. C-h <suffix key>.
  ;;

  ;;; Code:
#+end_src

* Package Footer

  This block includes the showcase transient.  The block does not run because it
  requires every example from the README's org in order to run.

#+name: package-footer
#+begin_src elisp

  (transient-define-prefix transient-showcase ()
    "A launcher for a currated selection of examples.
  While most of the prefixes have their :transient slot set to t, it's not
  possible to return from all of them, especially if they demonstrate flow
  control such as replacing or exiting."

    [["Layouts"
      ("ls" "stacked" ts-layout-stacked :transient t)
      ("lc" "columns" ts-layout-columns :transient t)
      ("lt" "stacked columns" ts-layout-stacked-columns :transient t)
      ("lg" "grid" ts-layout-the-grid :transient t)
      ("lp" "spaced out" ts-layout-spaced-out :transient t)
      ("le" "explicit class" ts-layout-explicit-classes :transient t)
      ("ld" "descriptions" ts-layout-descriptions :transient t)
      ("lD" "dynamic descriptions" ts-layout-dynamic-descriptions :transient t)]

     ["Nesting & Flow Control"
      ("fs" "stay transient" ts-stay-transient :transient t)
      ("fb" "binding sub-prefix" ts-simple-parent :transient t)
      ("fr" "sub-prefix with return" ts-simple-parent-with-return :transient t)
      ("fm" "manual setup in suffix" ts-parent-with-setup-suffix :transient t)
      ("fi" "mixing interactive" ts-interactive-basic :transient t)
      ("fe" "early completion" ts-simple-messager :transient t)]

     ["Managing State"
      ("sb" "a bunch of infixes" ts-basic-infixes :transient t)
      ("sc" "using scope (accepts prefix)" ts-scope :transient t)
      ("sn" "set & save / snowcones" ts-snowcone-eater :transient t)
      ("sp" "history key / ping-pong" ts-ping :transient t)
      ("sg" "always forget / goldfish" ts-goldfish :transient t)
      ("se" "always remember / elephant" ts-elephant :transient t)
      ("sd" "default values" ts-default-values :tranient t)
      ("sf" "enforcing inputs" ts-enforcing-inputs :transient t)
      ("sl" "lisp variables" ts-lisp-variable :transient t)]

     ["CLI arguments"
      ("cb" "basic arguments" ts-switches-and-arguments :transient t)
      ("cm" "random-init infix" ts-maybe-on :transient t)
      ("cc" "basic choices" ts-animal-choices :transient t)
      ("ce" "exclusive switches" ts-exclusive-switches :transient t)
      ("ci" "incompatible switches" ts-incompatible :transient t)
      ("co" "completions for choices" ts-choices-with-completions :transient t)
      ("cc"  "cowsay cli wrapper" ts-cowsay :transient t)]

     ["Visibility"
      ("vp" "predicates" ts-visibility-predicates :transient t)
      ("vi" "inapt (not suitable)" ts-inapt-parent :transient t)
      ("vl" "levels" ts-levels-and-visibility :transient t)]

     ["Advanced"
      ("ac" "generated child" ts-generated-child :transient t)
      ("ag" "generated group" ts-generated-group :transient t)
      ("ai" "custom infixes" ts-inception :transient t)
      ("au" "custom infixes & update" ts-inception-update :transient t)]])

  (provide 'transient-showcase)
  ;;; transient-showcase.el ends here

#+end_src

#+name: module-footer
#+begin_src elisp tangle: yes
#+end_src
